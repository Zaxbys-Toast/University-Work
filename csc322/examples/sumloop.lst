     1                                  ; Bob Allen
     2                                  ; Playing with Loops and summing
     3                                  ; Fall 2023
     4                                  
     5                                  SECTION .data
     6                                  ; define data/variables here.  Think DB, DW, DD, DQ
     7 00000000 010002000300040005-     array:	dw	1,2,3,4,5,6
     8 00000009 000600             
     9                                  
    10                                  
    11                                  SECTION .bss
    12                                  ; define uninitialized data here
    13 00000000 <res 00000002>          sum:	RESW 1
    14                                  
    15                                  SECTION .text
    16                                  global _main
    17                                  _main:
    18                                  
    19                                  ;;;; Init sum to zero (just a nice first step)
    20 00000000 66C705[00000000]00-     	mov word [sum],0
    21 00000008 00                 
    22                                  
    23                                  ;;;; Sum the array in ax (first) so zero it out
    24 00000009 6631C0                  	xor ax,ax
    25                                  
    26                                  ;;;; Loop ecx times, adding the next array element into ax
    27 0000000C BB[00000000]            	mov ebx,array	;; ebx points to the next element in array
    28 00000011 B906000000              	mov ecx,6	;; ecx is our loop counter (i.e. len of array)
    29                                  
    30                                  top:
    31 00000016 660303                  	add  ax,[ebx]	;; add next array element to 'sum'
    32 00000019 83C302                  	add  ebx,2	;; point to the next element in array
    33 0000001C E2F8                    	loop top
    34                                  
    35                                  ;;;; Write ax sum into sum variable
    36 0000001E 66A3[00000000]          	mov [sum],ax
    37                                  
    38                                  lastBreak:
    39                                  
    40                                  ; Normal termination code
    41 00000024 B801000000              mov eax, 1
    42 00000029 BB00000000              mov ebx, 0
    43 0000002E CD80                    int 80h
